transport io HashMap security auth callback Callback security auth callback CallbackHandler security auth callback NameCallback security auth callback PasswordCallback security auth callback UnsupportedCallbackException security sasl AuthorizeCallback security sasl RealmCallback security sasl Sasl security sasl SaslClient security sasl SaslClientFactory security sasl SaslException security sasl SaslServer security sasl SaslServerFactory junit framework TestCase TProcessor protocol TProtocolFactory server ServerTestBase server TServer server TSimpleServer server TServer Args slf4j Logger slf4j LoggerFactory testtsasltransports testcase logger logger loggerfactory.getlogger testtsasltransports.class host service principal password realm unwrapped_mechanism unwrapped_props wrapped_mechanism wrapped_props hashmap wrapped_props.put sasl.qop wrapped_props.put realm testmessage1 testmessage2 testsaslcallbackhandler callbackhandler password testsaslcallbackhandler password this.password password override handle callback callbacks unsupportedcallbackexception callback callbacks namecallback namecallback principal passwordcallback passwordcallback setpassword password.tochararray authorizecallback authorizecallback setauthorized realmcallback realmcallback settext realm unsupportedcallbackexception serverthread mechanism props thrown serverthread mechanism props this.mechanism mechanism this.props props run internalrun thrown internalrun tserversocket serversocket tserversocket servertestbase.port acceptandwrite serversocket serversocket.close acceptandwrite tserversocket serversocket ttransport servertransport serversocket.accept ttransport saslservertransport tsaslservertransport mechanism service host props testsaslcallbackhandler password servertransport saslservertransport.open inbuf testmessage1.getbytes length saslservertransport.readall inbuf saslservertransport.readall inbuf saslservertransport.readall inbuf inbuf.length logger.debug inbuf assertequals inbuf testmessage1 logger.debug testmessage2 saslservertransport.write testmessage2.getbytes saslservertransport.flush saslservertransport.close testsaslopen mechanism props serverthread serverthread serverthread mechanism props serverthread.start thread.sleep interruptedexception tsocket clientsocket tsocket host servertestbase.port ttransport saslclienttransport tsaslclienttransport mechanism principal service host props testsaslcallbackhandler password clientsocket saslclienttransport.open logger.debug testmessage1 saslclienttransport.write testmessage1.getbytes saslclienttransport.flush inbuf testmessage2.getbytes length saslclienttransport.readall inbuf inbuf.length logger.debug inbuf assertequals inbuf testmessage2 ttransportexception expectedexception saslclienttransport.open ttransportexception expectedexception assertnotnull expectedexception saslclienttransport.close logger.warn serverthread.interrupt serverthread.join interruptedexception assertnull serverthread.thrown testunwrappedopen testsaslopen unwrapped_mechanism unwrapped_props testwrappedopen testsaslopen wrapped_mechanism wrapped_props testanonymousopen testsaslopen testbadpassword serverthread serverthread serverthread unwrapped_mechanism unwrapped_props serverthread.start thread.sleep interruptedexception clientsidepassed tsocket clientsocket tsocket host servertestbase.port ttransport saslclienttransport tsaslclienttransport unwrapped_mechanism principal service host unwrapped_props testsaslcallbackhandler clientsocket saslclienttransport.open clientsidepassed fail ttransportexception tte logger.error tte assertnotnull tte.getmessage asserttrue tte.getmessage contains serverthread.interrupt serverthread.join clientsidepassed assertnotnull serverthread.thrown asserttrue serverthread.thrown.getmessage contains testwithserver testtsasltransportswithserver testit testtsasltransportswithserver servertestbase serverthread tserver server override ttransport getclienttransport ttransport underlyingtransport tsaslclienttransport wrapped_mechanism principal service host wrapped_props testsaslcallbackhandler password underlyingtransport override startserver tprocessor processor tprotocolfactory protofactory serverthread run tserversocket socket tserversocket port ttransportfactory factory tsaslservertransport.factory wrapped_mechanism service host wrapped_props testsaslcallbackhandler password server tsimpleserver args socket processor processor transportfactory factory protocolfactory protofactory logger.debug port server.serve e.printstacktrace fail serverthread.start thread.sleep override stopserver server.stop serverthread.join interruptedexception anonymousclient saslclient username hasprovidedinitialresponse anonymousclient username this.username username getmechanismname hasinitialresponse evaluatechallenge challenge saslexception hasprovidedinitialresponse saslexception hasprovidedinitialresponse username.getbytes saslexception iscomplete hasprovidedinitialresponse unwrap incoming offset len unsupportedoperationexception wrap outgoing offset len unsupportedoperationexception getnegotiatedproperty propname dispose anonymousserver saslserver user getmechanismname evaluateresponse response saslexception this.user response saslexception iscomplete user getauthorizationid user unwrap incoming offset len unsupportedoperationexception wrap outgoing offset len unsupportedoperationexception getnegotiatedproperty propname dispose saslanonymousfactory saslclientfactory saslserverfactory saslclient createsaslclient mechanisms authorizationid protocol servername props callbackhandler cbh mech mechanisms mech anonymousclient authorizationid saslserver createsaslserver mechanism protocol servername props callbackhandler cbh mechanism anonymousserver getmechanismnames props java.security.security.addprovider saslanonymousprovider saslanonymousprovider java.security.provider saslanonymousprovider saslanonymousfactory.class.getname saslanonymousfactory.class.getname 